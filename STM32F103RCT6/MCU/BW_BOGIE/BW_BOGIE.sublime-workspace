{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sebw",
				"setBBackward"
			],
			[
				"p",
				"pwm3Level"
			],
			[
				"adc11",
				"ADC1_CH11Value"
			],
			[
				"pwm",
				"pwm2Level"
			],
			[
				"Y",
				"finalFactorY"
			],
			[
				"fina",
				"finalFactorX"
			],
			[
				"G",
				"GPIOB_Pin0_High"
			],
			[
				"me",
				"messageLengthCounter"
			],
			[
				"def",
				"define"
			],
			[
				"sign",
				"factorY_Sign"
			],
			[
				"ms",
				"msg"
			],
			[
				"tem",
				"factorX_Temp"
			],
			[
				"fac",
				"factorX"
			],
			[
				"fa",
				"factorX"
			],
			[
				"SEMANTIC_PAES",
				"semantic_parser"
			],
			[
				"M",
				"Math"
			],
			[
				"ST",
				"START"
			],
			[
				"instr",
				"inputStream"
			],
			[
				"Leng",
				"buffLength"
			],
			[
				"for",
				"for\tfor"
			],
			[
				"b",
				"boolean"
			],
			[
				"Str",
				"TIM_TimeBaseStructure"
			],
			[
				"xD",
				"xDelay3000ms"
			],
			[
				"ceH",
				"nrf_CE_High"
			],
			[
				"ac",
				"ackPayloadLength"
			],
			[
				"GPIOP",
				"GPIO_Pin_10"
			],
			[
				"pac",
				"pAckPayloadLength"
			],
			[
				"eve",
				"event"
			],
			[
				"even",
				"nrf_RX_Event"
			],
			[
				"B",
				"BIT_STATUS_TX_DS"
			],
			[
				"BIT",
				"BIT_STATUS_RX_DR"
			],
			[
				"STATUS",
				"REG_STATUS"
			],
			[
				"nrf",
				"nrf"
			],
			[
				"nRF",
				"nrf24l01p"
			],
			[
				"US",
				"USART1"
			],
			[
				"USA",
				"USART_SendString"
			],
			[
				"REG_ADD",
				"REG_TX_ADDR"
			],
			[
				"wirte",
				"writeBuff"
			],
			[
				"SRC",
				"setARC"
			],
			[
				"ARD",
				"setARD"
			],
			[
				"0b",
				"0b11010111"
			],
			[
				"wir",
				"writeReg"
			],
			[
				"reg",
				"readReg"
			],
			[
				"0DB",
				"RF_PWR_0DBM"
			],
			[
				"2M",
				"BIT_RF_SETUP_RF_DR_2MBPS"
			],
			[
				"HIGH",
				"BIT_RF_SETUP_RF_DR_HIGH"
			],
			[
				"LOW",
				"BIT_RF_SETUP_RF_DR_LOW"
			],
			[
				"RXADDP",
				"REG_RX_ADDR_P0"
			],
			[
				"nrf_CE",
				"nrf_CE_High"
			],
			[
				"icn",
				"inc\t#include \"…\""
			],
			[
				"ic",
				"inc\t#include \"…\""
			],
			[
				"enc",
				"encode"
			],
			[
				"Encod",
				"encodeConvert"
			],
			[
				"clo",
				"converted_log"
			],
			[
				"try",
				"try\tTry/Except"
			],
			[
				"en",
				"encode"
			],
			[
				"encode",
				"encodeConvert"
			],
			[
				"lisdir",
				"listdir"
			],
			[
				"di",
				"direc"
			],
			[
				"dir",
				"dir_tree"
			],
			[
				"bc",
				"border-color\tproperty"
			],
			[
				"box",
				"box-shadow"
			],
			[
				"re",
				"remember_checkbox"
			],
			[
				"fun",
				"fun\tFunction"
			],
			[
				"getY",
				"getCCY"
			],
			[
				"pr",
				"private"
			],
			[
				"iF",
				"initInnerCircleXYFlag"
			],
			[
				"ca",
				"canvas"
			],
			[
				"w",
				"widthScale"
			],
			[
				"rt",
				"rotation"
			],
			[
				"e",
				"elif\telse if"
			],
			[
				"S",
				"Serial"
			],
			[
				"reader",
				"inputStreamReader"
			],
			[
				"l",
				"length"
			],
			[
				"tA",
				"ticketAvailable"
			],
			[
				"T",
				"ThreadSafeTest"
			],
			[
				"f",
				"false"
			],
			[
				"in",
				"interrupted"
			],
			[
				"the",
				"thread"
			],
			[
				"cl",
				"class"
			],
			[
				"F",
				"Float"
			],
			[
				"H",
				"HC_0X"
			],
			[
				"pW",
				"printWriter"
			],
			[
				"is",
				"inputStream"
			],
			[
				"bR",
				"bufferedReader"
			],
			[
				"isr",
				"InputStreamReader"
			],
			[
				"lo",
				"localIP"
			],
			[
				"fil",
				"fileReader"
			],
			[
				"Fi",
				"FileReader"
			],
			[
				"file",
				"fileWriter"
			],
			[
				"read",
				"readByte"
			],
			[
				"fileI",
				"FileInputStream"
			],
			[
				"ex",
				"expand"
			],
			[
				"intg",
				"integrate"
			],
			[
				"co",
				"collisionAvoidanceFlag"
			],
			[
				"inc",
				"inc\t#include \"…\""
			],
			[
				"spe",
				"speeds"
			],
			[
				"ri",
				"rightBack"
			],
			[
				"v",
				"void"
			],
			[
				"lef",
				"left_forward"
			],
			[
				"rig",
				"right_forward"
			],
			[
				"pri",
				"println"
			],
			[
				"s",
				"s_msg"
			],
			[
				"deb",
				"debug_flag_2"
			],
			[
				"de",
				"debug"
			],
			[
				"i",
				"i"
			],
			[
				"Ag",
				"Angle"
			],
			[
				"an",
				"Angle"
			],
			[
				"fl",
				"float"
			],
			[
				"ge",
				"getHumanReadableData"
			],
			[
				"get",
				"getRawData"
			],
			[
				"g",
				"gyroInitBuff"
			],
			[
				"gyr",
				"gyroInitFlag"
			],
			[
				"MPU",
				"MPU9250_Init"
			],
			[
				"et",
				"eular_to_quaternion"
			],
			[
				"sin",
				"sin"
			],
			[
				"mt",
				"quaternion_multiplication"
			],
			[
				"q1",
				"q1_conj"
			],
			[
				"ret",
				"return"
			],
			[
				"vec",
				"vector_rotation"
			],
			[
				"conj",
				"q_conj"
			],
			[
				"q2",
				"q_2"
			],
			[
				"toR",
				"toRad"
			],
			[
				"sb",
				"symbols"
			],
			[
				"vid",
				"videoStep"
			],
			[
				"col",
				"color"
			],
			[
				"cas",
				"caseCheckBox"
			],
			[
				"ba",
				"backwardCheckBox"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main.c",
			"settings":
			{
				"buffer_size": 3743,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "stm32f10x_it.c",
			"settings":
			{
				"buffer_size": 7636,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "User/NVIC/wulfric_nvic.c",
			"settings":
			{
				"buffer_size": 3361,
				"line_ending": "Windows"
			}
		},
		{
			"file": "User/Modes/avoidance_mode.c",
			"settings":
			{
				"buffer_size": 3015,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "User/Modes/tracking_mode.c",
			"settings":
			{
				"buffer_size": 5872,
				"line_ending": "Windows"
			}
		},
		{
			"file": "User/Modes/tracking_mode.h",
			"settings":
			{
				"buffer_size": 2746,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Pack",
				"Preferences: Browse Packages"
			],
			[
				"Package Control: Install Package",
				"Package Control: Install Package"
			]
		],
		"width": 444.0
	},
	"console":
	{
		"height": 482.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/ADC",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/GPIO",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/HCSR04",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Modes",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/NVIC"
	],
	"file_history":
	[
		"/D/Data/Proj_Android/REPO-BOGIE/STM32F103RCT6/Android/README.md",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Modes/free_mode.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/TIM/wulfric_tim.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/HCSR04/hc_sr04.h",
		"/D/Data/Proj_impress.js/impress.js-Sandbox/README.md",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Modes/tracking_mode.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Modes/tracking_mode.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Mode_Management/mode_management.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/USART/wulfric_usart.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Mode_Config/mode_config.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Semantic_Parser/semantic_parser.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Semantic_Parser/semantic_parser.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/GPIO/wulfric_gpio.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/Libraries/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Modes/avoidance_mode.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/RCC/wulfric_rcc.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/PWM/pwm.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/L298N/l298n.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Modes/avoidance_mode.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/stm32f10x_it.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/NVIC/wulfric_nvic.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/ADC/wulfric_adc.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/ADC/wulfric_adc.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/DMA/wulfric_dma.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/DMA/wulfric_dma.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/L298N/l298n.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/HCSR04/hc_sr04.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/GPIO/wulfric_gpio.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Modes/avoidance.c",
		"/D/Data/Proj_STM32/Powered by FreeRTOS/FreeRTOS_USART_Interrupt/User/RCC/wulfric_rcc.c",
		"/D/Data/TUTORs/Tech/Computer/MCU/Peripherals & Components/Modules/Infrared/MH Sensor Series/README.md",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Modes/avoidance.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Modes/tracking.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Modes/tracking.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/Libraries/STM32F10x_StdPeriph_Driver/inc/stm32f10x_tim.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Mode_Config/mode_config.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Mode_Management/mode_management.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Modes/free_mode.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/FreeRTOSConfig.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/Source/include/FreeRTOS.h",
		"/D/Data/Proj_STM32/BARE METAL/BARE_METAL_CORTEX_STM32F103_Keil/User/GPIO/wulfric_gpio.c",
		"/D/Data/Proj_STM32/BARE METAL/BARE_METAL_CORTEX_STM32F103_Keil/User/LED_PB0/led_pb0.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/PWM/pwm.h",
		"/D/Data/Proj_STM32/BARE METAL/BARE_METAL_CORTEX_STM32F103_Keil/User/LED_PB0/led_pb0.h",
		"/D/Data/Proj_STM32/BARE METAL/BARE_METAL_CORTEX_STM32F103_Keil/main.c",
		"/D/Data/Proj_STM32/BARE METAL/BARE_METAL_CORTEX_STM32F103_Keil/README.md",
		"/D/Data/Proj_STM32/BARE METAL/BARE_METAL_CORTEX_STM32F103_Keil/User/RCC/wulfric_rcc.h",
		"/D/Data/Proj_STM32/BARE METAL/BARE_METAL_CORTEX_STM32F103_Keil/User/RCC/wulfric_rcc.c",
		"/D/Data/Proj_STM32/BARE METAL/BARE_METAL_CORTEX_STM32F103_Keil/User/LED_PC13/led_pc13.c",
		"/D/Data/Proj_STM32/BARE METAL/BARE_METAL_CORTEX_STM32F103_Keil/User/LED_PC13/led_pc13.h",
		"/D/Data/Proj_STM32/Powered by FreeRTOS/FreeRTOS_Blink/User/LED_PC13/led_pc13.c",
		"/D/Data/Proj_STM32/Powered by FreeRTOS/FreeRTOS_Blink/User/LED_PC13/led_pc13.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/TIM/wulfric_tim.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/stm32f10x_it.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Mode/mode_management.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Mode/mode_management.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/Libraries/STM32F10x_StdPeriph_Driver/inc/misc.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/NVIC/wulfric_nvic.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/RCC/wulfric_rcc.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Mode/mode.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/Mode/mode.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/Libraries/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/USART/wulfric_usart.h",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/MCU/PWM/Example/BARE_METAL_PWM/startup/startup_stm32f10x_hd.s",
		"/D/Data/Proj_STM32/BARE METAL/BARE_METAL_CORTEX_STM32F103_Keil/startup/startup_stm32f10x_md.s",
		"/D/Data/Proj_STM32/BARE METAL/BARE_METAL_CORTEX_STM32F103_Keil/startup/startup_stm32f10x_hd.s",
		"/D/Data/Proj_STM32/BARE METAL/BARE_METAL_STM32_EXTI/startup/startup_stm32f10x_hd.s",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/MCU/PWM/Example/BARE_METAL_PWM/startup/startup_stm32f10x_md.s",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/MCU/PWM/Example/BARE_METAL_PWM/README.md",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/MCU/PWM/Example/FreeRTOS_PWM/README.md",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/MCU/PWM/Example/FreeRTOS_PWM/.gitignore",
		"/D/Data/Proj_C/MCU_Library/AVR/README.md",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/main.c",
		"/D/Data/Proj_Android/REPO-BOGIE/STM32F103RCT6/Android/BWBOGIE/.gitignore",
		"/D/Data/Proj_STM32/Powered by FreeRTOS/FreeRTOS_USART_Interrupt/User/LED_PC13/led_pc13.c",
		"/D/Data/Proj_STM32/Powered by FreeRTOS/FreeRTOS_USART_Interrupt/User/LED_PC13/led_pc13.h",
		"/D/Data/Proj_STM32/Powered by FreeRTOS/FreeRTOS_USART_Interrupt/User/USART/wulfric_usart.c",
		"/D/Data/Proj_STM32/Powered by FreeRTOS/FreeRTOS_USART_Interrupt/User/USART/wulfric_usart.h",
		"/C/Users/Glenn/Desktop/FreeRTOS_USART_Interrupt/User/USART/glenn_usart.c",
		"/D/Data/Proj_STM32/Powered by FreeRTOS/FreeRTOS_USART_Interrupt/User/GPIO/wulfric_gpio.c",
		"/D/Data/Proj_STM32/Powered by FreeRTOS/FreeRTOS_USART_Interrupt/User/GPIO/wulfric_gpio.h",
		"/D/Data/Proj_STM32/Powered by FreeRTOS/FreeRTOS_USART_Interrupt/User/NVIC/wulfric_nvic.c",
		"/D/Data/Proj_STM32/Powered by FreeRTOS/FreeRTOS_USART_Interrupt/User/NVIC/wulfric_nvic.h",
		"/D/Data/Proj_STM32/Powered by FreeRTOS/FreeRTOS_USART_Interrupt/User/RCC/wulfric_rcc.h",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/MCU/USART/wulfric_usart.h",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/MCU/USART/wulfric_usart.c",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/USART/glenn_usart.h",
		"/D/Data/Proj_STM32/SandBox/BW_BOGIE/User/USART/glenn_usart.c",
		"/D/Data/Proj_STM32/SandBox/FreeRTOS_ADC/main.c",
		"/D/Data/Proj_STM32/SandBox/FreeRTOS_MH_Sensor/main.c",
		"/D/Data/Drone-DIYer-Test/protocol.md",
		"/C/Users/Glenn/Desktop/README.md",
		"/C/Users/Glenn/Desktop/FreeRTOS_STM32_2/FreeRTOS_STM32/main.c",
		"/C/Users/Glenn/Desktop/FreeRTOS_STM32_2/FreeRTOS_STM32/README.md",
		"/D/Data/Proj_STM32/Powered by FreeRTOS/FreeRTOS_STM32/README.md",
		"/D/Data/Proj_Python/Encoding-Converter/EncodingConverter.py",
		"/D/Data/Proj_Python/Encoding-Converter/LICENSE",
		"/D/Data/Proj_Python/Encoding-Converter/readme.md",
		"/D/Data/Proj_C/C_Library/StringProcessing/NumToASCII/main.c",
		"/D/Data/Proj_C/C_Library/StringProcessing/NumToASCII/num_to_ascii.c",
		"/D/Data/Proj_C/C_Library/StringProcessing/NumToASCII/num_to_ascii.h",
		"/D/Data/Proj_C/C_Library/StringProcessing/NumToASCII/README.md",
		"/D/Data/Proj_C/C_Library/StringProcessing/NumToASCII/.gitignore",
		"/D/Data/Proj_C/C_Library/README.md",
		"/D/Data/Proj_C/C_Library/LICENSE",
		"/D/Data/Proj_C/MCU_Library/LICENSE",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/Peripherals/Memory/W25Q64/W25Q64.c",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/Peripherals/Memory/W25Q64/W25Q64.h",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/Peripherals/Wireless Comm/nRF24L01_Plus/example/TX/main.c",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/Peripherals/Wireless Comm/nRF24L01_Plus/example/README.md",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/Peripherals/Wireless Comm/nRF24L01_Plus/example/RX/main.c",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/Peripherals/Wireless Comm/nRF24L01_Plus/nrf24l01p.h",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/Peripherals/Wireless Comm/nRF24L01_Plus/nrf24l01p.c",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/Peripherals/README.md",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/MCU/RCC/wulfric_rcc.h",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/MCU/RCC/wulfric_rcc.c",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/MCU/SPI/wulfric_spi.h",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/MCU/SPI/wulfric_spi.c",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/MCU/TIM/wulfric_tim.c",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/MCU/TIM/wulfric_tim.h",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/MCU/EXTI/wulfric_exti.c",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/MCU/EXTI/wulfric_exti.h",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/MCU/GPIO/wulfric_gpio.c",
		"/D/Data/Proj_C/MCU_Library/ARM/STM32/MCU/GPIO/wulfric_gpio.h"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"printed",
			"()",
			" =",
			"= ",
			" =",
			"Capture_RiseFlag",
			"factorX_EndIndex",
			"440",
			"GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_7) == 0",
			"left",
			"440",
			"420",
			"2",
			"410",
			"400",
			"380",
			"MIN_DISTANCE_MILLIMETER",
			"800",
			"anticollision",
			"pwm3LevelSigned",
			"pwm3Level",
			"\t\t\t\t\t/* Normal. */\n\t\t\t\t\tsetAForward();\n\t\t\t\t\tpwm2Level = BASE_PWM_LEVEL; \t/*!< 0 to 1023 */\n\t\t\t\t\tpwm3LevelSigned = BASE_PWM_LEVEL - BASE_PWM_OFFSET;\n\t\t\t\t\tif (pwm3LevelSigned < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tsetBBackward();\n\t\t\t\t\t\tpwm3Level = -pwm3LevelSigned;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetBForward();\n\t\t\t\t\t\tpwm3Level = pwm3LevelSigned;\n\t\t\t\t\t}",
			"Value",
			"BASE_PWM_OFFSET",
			"pwm2LevelSigned",
			"BASE_PWM_OFFSET",
			"OFFSET",
			"pwm3Level",
			"Signed",
			"distanceMillimeter",
			"anticollision",
			"MIN_distanceMillimeter",
			"\t\t\t\t\tif (pwm2LevelSigned < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tsetABackward();\n\t\t\t\t\t\tpwm2Level = -pwm2LevelSigned;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetAForward();\n\t\t\t\t\t\tpwm2Level = pwm2LevelSigned;\n\t\t\t\t\t}",
			"RCC_APB2Periph_GPIOB",
			"GPIO_Pin_11",
			"GPIO_Pin_10",
			"USART1",
			"GPIOA",
			"A",
			"2",
			"RCC_APB2Periph_USART3",
			"USART2",
			"300",
			"pwm2Level",
			"tA",
			"pwm2LevelSigned",
			"SENS_COEF",
			"sens_coef",
			"sensitivity_coefficient",
			"extern",
			"int",
			"BackForward",
			" = ",
			"ADC1_CH10Value",
			"12",
			"ADC1_CH11Value",
			"ADC1_CH10Value",
			"ADC1_CH12Value",
			"ADC1_CH11Value",
			"uint32_t ",
			"uint32_t",
			"ADC1_CH10Value",
			"uint32_t",
			"ADC1_CH10Value",
			"uint32_t",
			" \t/*!< 0 to 1023 */",
			"400",
			"*/",
			"Deviated",
			"800",
			"Forward",
			"setAForward",
			"800",
			"ADC1_CH10Value",
			"tr); \t",
			". ",
			"USART_SendStr",
			"sendBack",
			"c",
			"sendBack",
			"int32_t",
			"uint32_t",
			"wulfric_adc",
			"wulfric_gpio",
			"DMA_Configuration",
			"wulfric_ADC_H",
			"ADC_H",
			"\t/*",
			"setBForward",
			"setBBackForward",
			"setAStop",
			"setBForward",
			" */",
			"distanceMillimeter",
			"low",
			"TRIG_PIN",
			"setTrigHigh",
			";",
			"GPIO",
			"pin0",
			"NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;",
			"TIM_RepetitionCounter",
			"BaseTimer",
			".\n",
			"Avoidance",
			"provides",
			"tracking_h",
			"SYMBOL",
			"nrf24l01p",
			"file",
			"nrf24l01p",
			"avoidance_h",
			"SYMBOL",
			"nrf24l01p",
			"hc_sr04",
			"nrf24l01p",
			"pwm2Level",
			"2",
			"pwm2Level",
			"CCR3",
			"msg[i] != '\\n'",
			"\\n",
			"factorX",
			"sendBack",
			"USART1",
			"temp",
			"USART1",
			"()"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"700",
			"return -1",
			"return 0",
			"Y",
			"wulfric",
			"WULFRIC",
			"wulfric",
			"WULFRIC",
			"wulfric",
			"WULFRIC",
			"wulfric",
			"WULFRIC",
			"wulfric",
			"WULFRIC",
			"wulfric",
			"WULFRIC",
			"wulfric",
			"WULFRIC",
			"WULFRIC LEE",
			"Wulfric Lee",
			"wulfric",
			"Wulfric Lee",
			"WULFRIC LEE",
			"wulfirc",
			"WULFIRC",
			"wulfirc",
			"Free",
			"intent",
			"Avoidance",
			"TrackingActivity"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3743,
						"regions":
						{
						},
						"selection":
						[
							[
								1273,
								1273
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 604.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "stm32f10x_it.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7636,
						"regions":
						{
						},
						"selection":
						[
							[
								5267,
								5267
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2442.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "User/NVIC/wulfric_nvic.c",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 3361,
						"regions":
						{
						},
						"selection":
						[
							[
								1760,
								1760
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 456.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "User/Modes/avoidance_mode.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3015,
						"regions":
						{
						},
						"selection":
						[
							[
								2383,
								2383
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 414.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "User/Modes/tracking_mode.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5872,
						"regions":
						{
						},
						"selection":
						[
							[
								1857,
								1857
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 512.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "User/Modes/tracking_mode.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2746,
						"regions":
						{
						},
						"selection":
						[
							[
								1893,
								1893
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 114.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "BW_BOGIE.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 312.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
